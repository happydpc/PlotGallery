Point(0) = {1.000000, 10.000000, 0.000000};
Point(1) = {1.000000, 11.000000, 0.000000};
Point(2) = {1.000000, 12.000000, 0.000000};
Point(4) = {2.000000, 10.000000, 0.000000};
Point(5) = {1.600000, 10.000000, 0.000000};
Point(6) = {2.000000, 11.500000, 0.000000};
Point(7) = {1.500000, 11.500000, 0.000000};
Point(8) = {1.500000, 12.000000, 0.000000};
Point(9) = {1.600000, 11.989898, 0.000000};
Point(10) = {1.600000, 11.000000, 0.000000};
Point(11) = {2.000000, 11.000000, 0.000000};
Line(12) = {1,0};
Line(13) = {2,1};
Line(14) = {8,2};
Line(15) = {4,11};
Line(16) = {5,4};
Line(17) = {0,5};
Circle(18) = {6, 7, 9};
Circle(19) = {9, 7, 8};
Line(20) = {5,10};
Line(21) = {10,9};
Line(22) = {10,1};
Line(23) = {11,6};
Line(24) = {11,10};
Line Loop(25) = {17,20,22,12};
Plane Surface(26) = {25};
Physical Surface('A0') = {26};
Line Loop(27) = {16,15,24,-20};
Plane Surface(28) = {27};
Physical Surface('A1') = {28};
Line Loop(29) = {21,19,14,13,-22};
Plane Surface(30) = {29};
Physical Surface('A2') = {30};
Line Loop(31) = {23,18,-21,-24};
Plane Surface(32) = {31};
Physical Surface('A3') = {32};
Physical Surface('PART0') = {26,28,30,32};
Physical Line('L0') = {12};
Physical Line('L1') = {13};
Physical Line('L2') = {14};
Physical Line('L3') = {15};
Physical Line('L4') = {16};
Physical Line('L5') = {17};
Physical Line('L6') = {18};
Physical Line('L7') = {19};
Physical Line('L8') = {20};
Physical Line('L9') = {21};
Physical Line('L10') = {22};
Physical Line('L11') = {23};
Physical Line('L12') = {24};
Physical Point('P0') = {0};
Physical Point('P1') = {1};
Physical Point('P2') = {2};
Physical Point('P4') = {4};
Physical Point('P5') = {5};
Physical Point('P6') = {6};
Physical Point('P7') = {7};
Physical Point('P8') = {8};
Physical Point('P9') = {9};
Physical Point('P10') = {10};
Physical Point('P11') = {11};
Mesh.RecombinationAlgorithm = 1; //blossom
Mesh.RecombineAll = 1; //turns on quads
Mesh.SubdivisionAlgorithm = 1; // quadrangles only
Mesh.CharacteristicLengthExtendFromBoundary = 1;
Mesh.CharacteristicLengthMin = 0;
Mesh.CharacteristicLengthMax = 1e+022;
Mesh.CharacteristicLengthFromPoints = 1;
Mesh.Algorithm = 8; //delquad = delauny for quads
Mesh.ElementOrder = 2; //linear or second set here
Mesh.SecondOrderIncomplete=1; //no face node w/ 2nd order
Mesh.SaveGroupsOfNodes = 1; // save node groups
